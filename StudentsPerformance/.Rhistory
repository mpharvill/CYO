ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_step(aes(affairs, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(affairs, rating)) +
geom_step(aes(affairs, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_line(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_hex(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_density(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_area(aes(rating, y_hat), col="red")
Affairs %>% as_tibble()
table(Affairs$rating)
Affairs <- select(Affairs, -gender, -children, -education, -occupation)
set.seed(1983, sample.kind = "Rounding")
fit <- train(rating ~ .,  method = "knn",
tuneGrid = data.frame(k = seq(1, 15, 2)),
data = Affairs)
ggplot(fit)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
qplot(rating, affairs, data = Affairs)
fit <- rpart(affairs ~ ., data = Affairs)
fit <- rpart(affairs ~ ., data = Affairs, control = rpart.control(cp = 0, minsplit = 2))
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>% as_tibble()
table(Affairs$rating)
Affairs <- select(Affairs, -gender, -children, -education, -occupation)
set.seed(1983, sample.kind = "Rounding")
fit <- train(rating ~ .,  method = "knn",
tuneGrid = data.frame(k = seq(1, 15, 2)),
data = Affairs)
ggplot(fit)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
qplot(rating, affairs, data = Affairs)
fit <- rpart(affairs ~ ., data = Affairs)
fit <- rpart(affairs ~ ., data = Affairs, control = rpart.control(cp = 0, minsplit = 2))
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
library(caret)
train_rpart <- train(affairs ~ ., method = "rpart", tuneGrid = data.frame(cp = seq(0, 0.05, len = 25)), data = Affairs)
ggplot(train_rpart)
plot(train_rpart$finalModel, margin = 0.1)
text(train_rpart$finalModel, cex = 0.75)
Affairs %>%
mutate(y_hat = predict(train_rpart)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_quantile(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_rug(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_line(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_area(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red", direction = "vh")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_segment(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_step(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_abline(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_jitter(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_smooth(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_smooth(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(train_rpart)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_smooth(aes(rating, y_hat), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_pointrange(aes(rating, y_hat, ymin = upper, ymax = lower), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(train_rpart)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_point(aes(rating, affairs)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_point(aes(rating, affairs), size = rating) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_point(aes(rating, affairs)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_smooth(aes(rating, affairs)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_density_ridges(aes(affairs, rating)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
library(ggridges)
install.packages("ggridges")
library(ggridges)
fit <- rpart(affairs ~ ., data = Affairs, control = rpart.control(cp = 0, minsplit = 2))
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_density_ridges(aes(affairs, rating)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs)) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red")
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red", alpha = 0.5)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red", alpha = 0.7)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red", alpha = 0.1)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="red", alpha = 0.1)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="blue", alpha = 0.1)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="darkblue", alpha = 0.1)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="darkred", alpha = 0.1)
Affairs %>%
mutate(y_hat = predict(train_rpart)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="darkblue", alpha = 0.1)
##### Note: this process could take a couple of minutes
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(caret)) install.packages("caret", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(readr)) install.packages("readr", repos = "http://cran.us.r-project.org")
if(!require(stringer)) install.packages("stringer", repos = "http://cran.us.r-project.org")
if(!require(AER)) install.packages("AER", repos = "http://cran.us.r-project.org")
if(!require(texreg)) install.packages("texreg", repos = "http://cran.us.r-project.org")
library(tidyverse)
library(caret)
library(data.table)
library(readr)
library(stringr)
library(AER)
library(ggplot2)
library(gridExtra)
library(texreg)
library(rpart)
data("Affairs")
options(digits = 3)
head(Affairs)
summary(Affairs)
table(Affairs$affairs)
prop.table(table(Affairs$gender))
Affairs %>%
group_by(gender) %>%
summarize(average = mean(affairs), twelve_or_more = mean(affairs == 12))
age_brkdwn <- Affairs  %>% ggplot() +
geom_density(aes(age, fill = gender, col = gender), alpha = 0.5)
yrs_brkdwn <- Affairs  %>% ggplot() +
geom_density(aes(yearsmarried, fill = gender, col = gender), alpha = 0.5)
chld_brkdwn <- Affairs %>% ggplot() +
geom_bar(aes(children, fill = gender, col = gender), alpha = 0.5)
rlgn_brkdwn <- Affairs %>% ggplot() +
geom_density(aes(religiousness, fill = gender, col = gender), alpha = 0.5)
edctn_brkdwn <- Affairs %>% ggplot() +
geom_bar(aes(education, fill = gender, col = gender), alpha = 0.5)
occptn_brkdwn <- Affairs %>% ggplot() +
geom_bar(aes(occupation, fill = gender, col = gender), alpha = 0.5)
rtng_brkdwn <-Affairs %>% ggplot() +
geom_bar(aes(rating, fill = gender, col = gender), alpha = 0.5)
grid.arrange(age_brkdwn, yrs_brkdwn, chld_brkdwn, rlgn_brkdwn, edctn_brkdwn,
occptn_brkdwn, rtng_brkdwn, ncol = 2)
Affairs$y_n_affairs[Affairs$affairs > 0] <- 1
Affairs$y_n_affairs[Affairs$affairs == 0] <- 0
Affairs$y_n_affairs <- factor(Affairs$y_n_affairs, levels = c(0,1), labels = c("No", "Yes"))
#### check success
table(Affairs$y_n_affairs)
### simple linear regession models
age_lm <- lm(affairs ~ age, data = Affairs)
yearsmarried_lm <- lm(affairs ~ yearsmarried, data = Affairs)
children_lm <- lm(affairs ~ children, data = Affairs)
religiousness_lm <- lm(affairs ~ religiousness, data = Affairs)
education_lm <- lm(affairs ~ education, data = Affairs)
occupation_lm <- lm(affairs ~ occupation, data = Affairs)
rating_lm <- lm(affairs ~ rating, data = Affairs)
screenreg(list(age_lm, yearsmarried_lm, children_lm, religiousness_lm,
education_lm, occupation_lm, rating_lm))
summary(age_lm)
fit_all <- glm(y_n_affairs ~ gender + age + yearsmarried + children + religiousness + education +
occupation + rating, data = Affairs, family = binomial())
summary(fit_all)
fit_fewer <- glm(y_n_affairs ~ age + yearsmarried + religiousness + rating, data = Affairs,
family = binomial())
summary(fit_fewer)
coef(fit_fewer)
new_ages <- tibble(age = c(18, 28, 38, 48, 58), yearsmarried = mean(Affairs$yearsmarried),
religiousness = mean(Affairs$religiousness), rating = mean(Affairs$rating))
new_ages$probability <- predict(fit_fewer, newdata = new_ages, type = "response")
new_ages
new_years <- tibble(age = mean(Affairs$age), yearsmarried = c(0,0.75,1,1.5,2,4,6,8,10,12,14,15), religiousness = mean(Affairs$religiousness),
rating = mean(Affairs$rating))
new_years$probability <- predict(fit_fewer, newdata = new_years, type = "response")
new_years
new_rlgn <- tibble(age = mean(Affairs$age), yearsmarried = mean(Affairs$yearsmarried),
religiousness = c(1,2,3,4,5), rating = mean(Affairs$rating))
new_rlgn$probability <- predict(fit_fewer, newdata = new_rlgn, type = "response")
new_rlgn
new_rating <- tibble(age = mean(Affairs$age), yearsmarried = mean(Affairs$yearsmarried),
religiousness = mean(Affairs$religiousness), rating = c(1,2,3,4,5))
new_rating$probability <- predict(fit_fewer, newdata = new_rating, type = "response")
new_rating
Affairs %>% as_tibble()
table(Affairs$rating)
Affairs <- select(Affairs, -gender, -children, -education, -occupation)
set.seed(1983, sample.kind = "Rounding")
fit <- train(rating ~ .,  method = "knn",
tuneGrid = data.frame(k = seq(1, 15, 2)),
data = Affairs)
ggplot(fit)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="darkblue", alpha = 0.1)
fit <- rpart(affairs ~ ., data = Affairs)
fit <- rpart(affairs ~ ., data = Affairs, control = rpart.control(cp = 0, minsplit = 2))
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="darkred", alpha = 0.1)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="darkblue", alpha = 0.1)
train_rpart <- train(affairs ~ ., method = "rpart", tuneGrid = data.frame(cp = seq(0, 0.05, len = 25)), data = Affairs)
ggplot(train_rpart)
plot(train_rpart$finalModel, margin = 0.1)
text(train_rpart$finalModel, cex = 0.75)
Affairs %>%
mutate(y_hat = predict(train_rpart)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_pointrange(aes(rating, y_hat, ymin = 0, ymax = 12), col="darkblue", alpha = 0.1)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), alpha = 0.2) +
geom_jitter(aes(rating, y_hat), col="darkblue", alpha = 0.1)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), col = "darkred",alpha = 0.2) +
geom_jitter(aes(rating, y_hat), col="darkblue", alpha = 0.1)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), col = "darkblue",alpha = 0.2) +
geom_jitter(aes(rating, y_hat), col="darkred", alpha = 0.1)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), col = "darkblue",alpha = 0.5) +
geom_jitter(aes(rating, y_hat), col="darkred", alpha = 0.5)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), col = "darkblue",alpha = 0.5) +
geom_jitter(aes(rating, y_hat), col="darkred", alpha = 0.2)
fit <- rpart(affairs ~ ., data = Affairs)
fit <- rpart(affairs ~ ., data = Affairs, control = rpart.control(cp = 0, minsplit = 2))
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), col = "darkble", alpha = 0.5) +
geom_jitter(aes(rating, y_hat), col="darkred", alpha = 0.2)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), col = "darkblue", alpha = 0.5) +
geom_jitter(aes(rating, y_hat), col="darkred", alpha = 0.2)
train_rpart <- train(affairs ~ ., method = "rpart", tuneGrid = data.frame(cp = seq(0, 0.05, len = 25)), data = Affairs)
ggplot(train_rpart)
plot(train_rpart$finalModel, margin = 0.1)
text(train_rpart$finalModel, cex = 0.75)
Affairs %>%
mutate(y_hat = predict(train_rpart)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), col = "darkblue", alpha = 0.5) +
geom_jitter(aes(rating, y_hat), col="darkred", alpha = 0.2)
# fit a classification tree and plot it
train_rpart2 <- train(y ~ .,
method = "rpart",
tuneGrid = data.frame(cp = seq(0.0, 0.1, len = 25)),
data = Affairs)
# fit a classification tree and plot it
train_rpart2 <- train(rating ~ .,
method = "rpart",
tuneGrid = data.frame(cp = seq(0.0, 0.1, len = 25)),
data = Affairs)
plot(train_rpart2)
# compute accuracy
confusionMatrix(predict(train_rpart2, Affairs$affairs), Affairs$affairs$rating)$overall["Accuracy"]
library(randomForest)
fit <- randomForest(rating ~., data = Affairs)
plot(fit)
fit <- randomForest(affairs ~., data = Affairs)
plot(fit)
Affairs %>%
mutate(y_hat = predict(fit, newdata = Affairs)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), col = "darkblue", alpha = 0.5) +
geom_jitter(aes(rating, y_hat), col="darkred", alpha = 0.2)
fit <- rpart(affairs ~ ., data = Affairs)
Affairs %>% as_tibble()
table(Affairs$rating)
Affairs <- select(Affairs, -gender, -children, -education, -occupation)
set.seed(1983, sample.kind = "Rounding")
fit <- train(rating ~ .,  method = "knn",
tuneGrid = data.frame(k = seq(1, 15, 2)),
data = Affairs)
ggplot(fit)
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), col = "darkblue",alpha = 0.5) +
geom_jitter(aes(rating, y_hat), col="darkred", alpha = 0.2)
fit <- rpart(affairs ~ ., data = Affairs)
fit <- rpart(affairs ~ ., data = Affairs, control = rpart.control(cp = 0, minsplit = 2))
Affairs %>%
mutate(y_hat = predict(fit)) %>%
ggplot() +
geom_jitter(aes(rating, affairs), col = "darkblue", alpha = 0.5) +
geom_jitter(aes(rating, y_hat), col="darkred", alpha = 0.2)
train_rpart <- train(affairs ~ ., method = "rpart", tuneGrid = data.frame(cp = seq(0, 0.05, len = 25)), data = Affairs)
ggplot(train_rpart)
# prune the tree
pruned_fit <- prune(fit, cp = 0.01)
library(randomforest)
##### Note: this process could take a couple of minutes
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
